{"version":3,"sources":["Firebase.js","Home.js","Welcome.js","Navigation.js","FormError.js","Login.js","Register.js","MeetingList.js","Meeting.js","Checkin.js","AttendeesList.js","Attendees.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Home","user","this","props","className","style","fontSize","fontWeight","to","Component","Welcome","userName","onClick","e","logOutUser","Navigation","href","FormError","theMessage","Login","state","email","password","errorMessage","handleChamge","bind","handleSubmit","itemName","target","name","itemValue","value","setState","registationInfor","preventDefault","signInWithEmailAndPassword","then","navigate","catch","error","message","onSubmit","htmlFor","required","type","id","placeholder","onChange","Register","displayName","passOne","passTwo","createUserWithEmailAndPassword","registerUser","MeetingList","deleteMeeting","meetingID","database","ref","userID","remove","handleList","map","item","role","aria-label","title","meetingName","Meeting","addMeeting","aria-describedby","Checkin","console","log","handleChange","push","attendeeName","attendeeEmail","star","AttendeesList","deleteAttendee","attendee","adminUser","toggleStar","undefined","set","admin","myAttendees","attendees","key","attendeesID","Attendees","resetQuery","temp","searchQuery","displayAttendees","on","snapshot","val","attendeesList","filterAttendees","filter","toLowerCase","match","App","onAuthStateChanged","FBUser","updateProfile","uid","signOut","howManyMeetings","meetings","meetingList","length","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4912996a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyANjfw0ovCegUHkO5Awx0eemG07nBPvWEg\",\r\n  authDomain: \"leafy-summer-255309.firebaseapp.com\",\r\n  databaseURL: \"https://leafy-summer-255309.firebaseio.com\",\r\n  projectId: \"leafy-summer-255309\",\r\n  storageBucket: \"leafy-summer-255309.appspot.com\",\r\n  messagingSenderId: \"178019273444\",\r\n  appId: \"1:178019273444:web:85b1903126b17b009ebaf1\",\r\n  measurementId: \"G-N13D0J8NZE\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    const biggerLead = {\r\n      fontSize: 1.4 + \"em\",\r\n      fontWeight: 200\r\n    };\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\r\n            <div\r\n              className=\"display-4 text-primary mt-3 mb-2\"\r\n              style={{ fontSize: 2.8 + \"em\" }}\r\n            >\r\n              Meeting bao12\r\n            </div>\r\n            <p className=\"lead\" style={biggerLead}>\r\n              This simple app creates meetings, allows people to check in, and\r\n              picks random users to award giveaways. It's a good example of a\r\n              Single Page Application which includes connection to a database\r\n              and routing. It's a practical way to learn\r\n              <Link to=\"https://reactjs.org/\">React</Link>\r\n              with <Link to=\"https://firebase.google.com\">Firebase</Link>.\r\n            </p>\r\n            {user == null && (\r\n              <span>\r\n                <Link to=\"/register\" className=\"btn btn-outline-primary mr-2\">\r\n                  Register\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-outline-primary mr-2\">\r\n                  Log In\r\n                </Link>\r\n              </span>\r\n            )}\r\n            {user && (\r\n              <Link to=\"/meetings\" className=\"btn btn-primary\">\r\n                Meetings\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport default class Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-secondary font-weight-bold pl-1 text-center\">\r\n        <span>Welcome {this.props.userName},</span>\r\n        <Link\r\n          to=\"/login\"\r\n          className=\"font-weight-bold text-primary pl-1\"\r\n          onClick={e => this.props.logOutUser(e)}\r\n        >\r\n          log out\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nexport default class Navigation extends Component {\r\n  render() {\r\n    const { user, logOutUser } = this.props;\r\n    return (\r\n      <nav className=\"site-nav family-sans navbar navbar-expand bg-primary navbar-dark higher\">\r\n        <div className=\"container-fluid\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            <FaUsers className=\"mr-1\" /> Meeting Log\r\n          </a>\r\n          {!user && (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <a className=\"nav-item nav-link\" href=\"/login\">\r\n                log in\r\n              </a>\r\n              <a className=\"nav-item nav-link\" href=\"/register\">\r\n                register\r\n              </a>\r\n            </div>\r\n          )}\r\n          {user && (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <a className=\"nav-item nav-link\" href=\"/meetings\">\r\n                meetings\r\n              </a>\r\n              <a\r\n                className=\"nav-item nav-link\"\r\n                href=\"/logout\"\r\n                onClick={e => logOutUser(e)}\r\n              >\r\n                log out\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class FormError extends Component {\r\n  render() {\r\n    const { theMessage } = this.props;\r\n    return <div className=\"col-12 alert alert-danger px-3\">{theMessage}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport FormError from \"./FormError\";\r\nimport { navigate } from \"@reach/router\";\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errorMessage: null\r\n    };\r\n    this.handleChamge = this.handleChamge.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChamge(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n    this.setState({\r\n      [itemName]: itemValue\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    let registationInfor = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(\r\n        registationInfor.email,\r\n        registationInfor.password\r\n      )\r\n      .then(() => {\r\n        navigate(\"/meetings\");\r\n      })\r\n      .catch(error => {\r\n        if (error.message != null) {\r\n          this.setState({ errorMessage: error.message });\r\n        } else {\r\n          this.setState({ errorMessage: null });\r\n        }\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Log in</h3>\r\n                  <section className=\"form-group\">\r\n                    {this.state.errorMessage != null ? (\r\n                      <FormError theMessage={this.state.errorMessage} />\r\n                    ) : null}\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"Email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleChamge}\r\n                    />\r\n                  </section>\r\n                  <section className=\"form-group\">\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.handleChamge}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Log in\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport firebase from \"./Firebase\";\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      passOne: \"\",\r\n      passTwo: \"\",\r\n      errorMessage: null\r\n    };\r\n    this.handleChamge = this.handleChamge.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChamge(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n    this.setState(\r\n      {\r\n        [itemName]: itemValue\r\n      },\r\n      () => {\r\n        if (this.state.passOne !== this.state.passTwo) {\r\n          this.setState({ errorMessage: \"Password is not match\" });\r\n        } else {\r\n          this.setState({ errorMessage: null });\r\n        }\r\n      }\r\n    );\r\n  }\r\n  handleSubmit(e) {\r\n    let registationInfor = {\r\n      displayName: this.state.displayName,\r\n      email: this.state.email,\r\n      password: this.state.passOne\r\n    };\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(\r\n        registationInfor.email,\r\n        registationInfor.password\r\n      )\r\n      .then(() => {\r\n        this.props.registerUser(registationInfor.displayName);\r\n      })\r\n      .catch(error => {\r\n        if (error.message != null) {\r\n          this.setState({ errorMessage: error.message });\r\n        } else {\r\n          this.setState({ errorMessage: null });\r\n        }\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Register</h3>\r\n                  <div className=\"form-row\">\r\n                    {this.state.errorMessage != null ? (\r\n                      <FormError theMessage={this.state.errorMessage} />\r\n                    ) : null}\r\n                    <section className=\"col-sm-12 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"displayName\"\r\n                      >\r\n                        Display Name\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"displayName\"\r\n                        placeholder=\"Display Name\"\r\n                        name=\"displayName\"\r\n                        required\r\n                        value={this.state.displayName}\r\n                        onChange={this.handleChamge}\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      required\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChamge}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-row\">\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"passOne\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.passOne}\r\n                        onChange={this.handleChamge}\r\n                      />\r\n                    </section>\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        required\r\n                        name=\"passTwo\"\r\n                        placeholder=\"Repeat Password\"\r\n                        value={this.state.passTwo}\r\n                        onChange={this.handleChamge}\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Register\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport {GiCancel, GoListUnordered} from \"react-icons/all\";\r\nimport {FaLink} from \"react-icons/all\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\nexport default class MeetingList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.deleteMeeting = this.deleteMeeting.bind(this)\r\n    }\r\n    deleteMeeting = (e, meetingID) =>{\r\n        e.preventDefault();\r\n        const ref = firebase.database().ref(`meetings/${this.props.userID}/${meetingID}`);\r\n        ref.remove()\r\n    }\r\n    render() {\r\n        const target = this.props.meetingID;\r\n        const handleList = target.map(item => (\r\n            <div className=''>\r\n                <div className='border border-secondary mw-25 rounded m-1 view overlay'>\r\n                    <section className='btn-group d-flex align-items-center justify-content-center' role='group' aria-label='Meeting Options'>\r\n                        <button className='btn btn-sm btn-outline-secondary w-25' title='Delete Meeting'\r\n                                onClick={e => this.deleteMeeting(e, item.meetingID)}><GiCancel/>\r\n                        </button>\r\n                        <button className='btn btn-sm btn-outline-secondary w-25' title='Check In'\r\n                                onClick={e => navigate(`/checkin/${this.props.userID}/${item.meetingID}`)}><FaLink/>\r\n                        </button>\r\n                        <button className='btn btn-sm btn-outline-secondary w-25' title='See Attendees'\r\n                                onClick={e => navigate(`/attendees/${this.props.userID}/${item.meetingID}`)}><GoListUnordered/>\r\n                        </button>\r\n                        <div className=''><p>{item.meetingName}</p></div>\r\n                    </section>\r\n\r\n                </div>\r\n            </div>\r\n        ));\r\n        return (\r\n            <div className=\"col-11 text-center card border-top-0 rounded-0\">\r\n                <div className=\"card-body py-2\">\r\n                    <h2 className=\"card-title font-weight-light m-0\"> Meeting List </h2>\r\n                    <div className=\"list-group list-group-flush\">{handleList}</div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MeetingList from \"./MeetingList\";\r\nexport default class Meeting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      meetingName: \"\",\r\n      errorMessage: null\r\n    };\r\n    this.handleChamge = this.handleChamge.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChamge(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n    this.setState({\r\n      [itemName]: itemValue\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.addMeeting(this.state.meetingName);\r\n    this.setState({ meetingName: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8 text-center\">\r\n            <h1 className=\"font-weight-light\">Add a Meeting</h1>\r\n            <div className=\"card bg-light\">\r\n              <div className=\"card-body text-center\">\r\n                <form className=\"formgroup\" onSubmit={this.handleSubmit}>\r\n                  <div className=\"input-group input-group-lg\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"meetingName\"\r\n                      placeholder=\"Meeting name\"\r\n                      aria-describedby=\"buttonAdd\"\r\n                      value={this.state.meetingName}\r\n                      onChange={this.handleChamge}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-sm btn-info\"\r\n                        id=\"buttonAdd\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {this.props.meetingID && (\r\n            <MeetingList meetingID={this.props.meetingID} userID={this.props.userID} />\r\n\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\n\r\nclass Checkin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            displayName: '',\r\n            email: ''\r\n        }\r\n        console.log(this.props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        const itemName = e.target.name;\r\n        const itemValue = e.target.value;\r\n        this.setState({[itemName]: itemValue})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        const ref = firebase.database().ref(`meetings/${this.props.userID}/${this.props.meetingID}/attendees`)\r\n        ref.push({\r\n            attendeeName: this.state.displayName,\r\n            attendeeEmail: this.state.email,\r\n            star: false\r\n        });\r\n        navigate(`/attendees/${this.props.userID}/${this.props.meetingID}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"card bg-light\">\r\n                                    <div className=\"card-body\">\r\n                                        <h3 className=\"font-weight-light mb-3\">Check in</h3>\r\n                                        <section className=\"form-group\">\r\n                                            <label\r\n                                                className=\"form-control-label sr-only\"\r\n                                                htmlFor=\"displayName\"\r\n                                            >\r\n                                                Name\r\n                                            </label>\r\n                                            <input\r\n                                                required\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                id=\"displayName\"\r\n                                                name=\"displayName\"\r\n                                                placeholder=\"Name\"\r\n                                                onChange={this.handleChange}\r\n\r\n                                            />\r\n                                        </section>\r\n                                        <section className=\"form-group\">\r\n                                            <label\r\n                                                className=\"form-control-label sr-only\"\r\n                                                htmlFor=\"Email\"\r\n\r\n                                            >\r\n                                                Email\r\n                                            </label>\r\n                                            <input\r\n                                                required\r\n                                                className=\"form-control\"\r\n                                                type=\"email\"\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                                placeholder=\"Email\"\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                        </section>\r\n                                        <div className=\"form-group text-right mb-0\">\r\n                                            <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                Check in\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkin;","import React, {Component} from 'react';\r\nimport {GoTrashcan, GoStar, GoMail} from \"react-icons/all\";\r\nimport firebase from \"firebase\";\r\n\r\nclass AttendeesList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.deleteAttendee = this.deleteAttendee.bind(this)\r\n    }\r\n\r\n    deleteAttendee = (e, meetingID, attendee) => {\r\n        e.preventDefault()\r\n        const adminUser = this.props.adminUser\r\n        const ref = firebase.database().ref(`meetings/${adminUser}/${meetingID}/attendees/${attendee}`)\r\n        ref.remove()\r\n    };\r\n    toggleStar = (e, meetingID, attendee, star) => {\r\n        e.preventDefault()\r\n        const adminUser = this.props.adminUser\r\n        const ref = firebase.database().ref(`meetings/${adminUser}/${meetingID}/attendees/${attendee}/star`)\r\n        if (star === undefined) {\r\n            ref.set(true);\r\n        } else {\r\n            ref.set(!star)\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const admin = this.props.adminUser === this.props.userID ? true : false\r\n        const attendees = this.props.attendees;\r\n        const myAttendees = attendees.map(item =>\r\n            <div className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\" key={item.attendeesID}>\r\n                <div className=\"card \">\r\n                    <div className=\"card-body px-3 py-2 d-flex align-items-center justify-content-center\">\r\n                        <div className={\r\n                            'card-body px-3 py-2 d-flex align-items-center' + (admin ? '' : 'justify-content-center')\r\n                        }>\r\n                            {admin && (\r\n                                <div className='btn-group pr-2'>\r\n                                    <button className='btn btn-sm btn-outline-secondary' title='Delete Attendee'\r\n                                            onClick={(e) => {\r\n                                                this.deleteAttendee(e, this.props.meetingID, item.attendeesID)\r\n                                            }}\r\n                                    ><GoTrashcan/></button>\r\n                                    <div className='btn-group pr-2'>\r\n                                        <button\r\n                                            className={'btn btn-sm ' + (item.star ? 'btn-danger' : 'btn-outline-secondary')}\r\n                                            title='Delete Attendee'\r\n                                            onClick={(e) => {\r\n                                                this.toggleStar(e, this.props.meetingID, item.attendeesID, item.star)\r\n                                            }}\r\n                                        ><GoStar/></button>\r\n                                    </div>\r\n                                    <a href={`mailto:${item.attendeeEmail}`}\r\n                                       className='btn btn-sm btn-outline-secondary' title='mail attendee'> <GoMail/>\r\n                                    </a>\r\n\r\n                                </div>\r\n\r\n                            )}\r\n                        </div>\r\n                        <div>{item.attendeeName}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className='row justify-content-center'>\r\n                {myAttendees}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AttendeesList;","import React, {Component} from 'react';\r\nimport firebase from \"./Firebase\";\r\nimport AttendeesList from \"./AttendeesList\";\r\nimport {FaUndo} from \"react-icons/fa\";\r\n\r\nclass Attendees extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            displayAttendees: [],\r\n            searchQuery: '',\r\n            temp: null\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.resetQuery = this.resetQuery.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ref = firebase.database().ref(`meetings/${this.props.userID}/${this.props.meetingID}/attendees/`)\r\n        ref.on('value', snapshot => {\r\n            let attendees = snapshot.val()\r\n            let attendeesList = [];\r\n            for (let item in attendees) {\r\n                attendeesList.push({\r\n                    attendeesID: item,\r\n                    attendeeName: attendees[item].attendeeName,\r\n                    attendeeEmail: attendees[item].attendeeEmail,\r\n                    star: attendees[item].star\r\n                });\r\n                this.setState({\r\n                    displayAttendees: attendeesList\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const key = e.target.name\r\n        const value = e.target.value\r\n        this.setState({\r\n            [key]: value,\r\n            temp: e.target\r\n        })\r\n    };\r\n    resetQuery = () => {\r\n        this.state.temp.value = '';\r\n        this.setState( {\r\n            searchQuery : ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const dataFilter = (item) => item.attendeeName.toLowerCase()\r\n            .match(this.state.searchQuery.toLowerCase()) && true\r\n\r\n        const filterAttendees = this.state.displayAttendees.filter(dataFilter)\r\n\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-8\">\r\n                        <h1 className=\"font-weight-light text-center\">\r\n                            Attendees\r\n                        </h1>\r\n                        <div className={'card bg-light mb-4'}>\r\n                            <div className={'card-body text-center'}>\r\n                                <div className={'input-group input-group-lg'}>\r\n\r\n                                <input type={'text'} name={'searchQuery'} placeholder={'Search Attendees'}\r\n                                       className={'form-control'} onChange={this.handleChange}/>\r\n                                    <div className={'input-class-append'}>\r\n                                        <button className={'btn btn-sm btn-outline-info'} title={'Reset Search'} onClick={this.resetQuery}>\r\n                                            <FaUndo/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <AttendeesList attendees={filterAttendees} userID={this.props.userID}\r\n                               adminUser={this.props.adminUser} meetingID={this.props.meetingID}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Attendees;","import React, { Component } from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport firebase from \"./Firebase\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport 'mdbootstrap/css/mdb.css'\nimport Home from \"./Home\";\nimport Welcome from \"./Welcome\";\nimport Navigation from \"./Navigation\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Meeting from \"./Meeting\";\nimport Checkin from './Checkin'\nimport Attendees from './Attendees'\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      displayName: null,\n      userID: null,\n      meetingID: null,\n      howManyMeetings: null\n    };\n  }\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      if (FBUser) {\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid\n        });\n        const meetingRef = firebase.database().ref(\"meetings/\" + FBUser.uid);\n        meetingRef.on(\"value\", snapshot => {\n          let meetings = snapshot.val();\n          let meetingList = [];\n          for (let item in meetings) {\n            meetingList.push({\n              meetingID: item,\n              meetingName: meetings[item].meetingName\n            });\n          }\n          this.setState({\n            meetingID: meetingList,\n            howManyMeetings: meetingList.length\n          });\n        });\n      }\n    });\n  }\n  registerUser = userName => {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      FBUser.updateProfile({\n        displayName: userName\n      }).then(() => {\n        this.setState({\n          user: FBUser,\n          displayName: userName,\n          userID: FBUser.uid\n        });\n        navigate(\"/meetings\");\n      });\n    });\n  };\n  logOutUser = e => {\n    e.preventDefault();\n    this.setState({\n      user: null,\n      displayName: null,\n      userID: null\n    });\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        navigate(\"/login\");\n      });\n  };\n  addMeeting = meetingName => {\n    const ref = firebase.database().ref(`meetings/${this.state.user.uid}`);\n    ref.push({ meetingName: meetingName });\n  };\n  render() {\n    const user = this.state.user;\n    return (\n      <div>\n        <Navigation user={user} logOutUser={this.logOutUser} />\n        {this.state.user && (\n          <Welcome\n            userName={this.state.displayName}\n            logOutUser={this.logOutUser}\n          />\n        )}\n        <Router>\n          <Home path=\"/\" user={user} />\n          <Login path=\"/login\" />\n          <Meeting\n            path=\"/meetings\"\n            addMeeting={this.addMeeting}\n            user={user}\n            meetingID={this.state.meetingID}\n            userID = {this.state.userID}\n          />\n          <Attendees\n              path=\"/attendees/:userID/:meetingID\"\n              adminUser={this.state.userID}\n          />\n          <Checkin\n              path=\"/checkin/:userID/:meetingID\"\n          />\n          <Register path=\"/register\" registerUser={this.registerUser} />\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}